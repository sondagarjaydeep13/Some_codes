select * from customers;
select*from payments;
select count(customerNumber) from customers;
select sum(amount) from payments;
select avg(amount) from payments;
select min(amount) from payments;
select*from orders;
select customerNumber from orders where status="Shipped";
use classicmodels;
select city,count(customerNumber) from customers group by city;
select count(status) from orders where status="Shipped";
select status,count(status) from orders where status="Disputed";
select city from customers group by city having count(customerNumber>5);
select customerNumber  from payments group by customerNumber having sum(amount>50000);
select * from customers where city="Lyon" limit 11,20;
select * from customers union select * from employees;
select * from customers where customerNumber in(110,112,113,119);
select * from payments where customerNumber between 110 and 120;
select*from products;
select productName,productCode from products where quantityInStock between 5000 and 10000;
select*from customers;
select*from customers where customerName like "_t%";
select*from customers where city like "___n%";
select*from offices;
select*from offices where phone like "_1%";
use classicmodels;
select * from customers;
select * from payments;
select customers.customerName,payments.amount from customers inner join payments on customers.customerNumber=payments.customerNumber;
select customers.customerName,payments.amount from customers inner join payments where customers.customerNumber
=payments.customerNumber ;
select customers.* ,payments.* from customers inner join payments on customers.customerNumber=payments.customerNumber;
select customers.*,orders.* from customers right  join orders on customers.customerNumber=orders.customerNumber;
use classicmodels;
select customers.*,payments.* from customers right join payments on customers.customerNumber=payments.customerNumber where payments.amount>100000;